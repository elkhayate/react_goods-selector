{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","addGood","good","setState","prevState","removeGood","filter","elem","clearGood","createTitle","length","join","slice","this","className","type","onClick","map","isSelected","includes","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,QAAU,SAACC,GACT,EAAKC,UACH,SAACC,GAAD,MAAgB,CAAEJ,aAAa,GAAD,mBAAMI,EAAUJ,cAAhB,CAA8BE,S,EAIhEG,WAAa,SAACH,GACZ,EAAKC,UACH,SAACC,GAAD,MACE,CAAEJ,aAAcI,EAAUJ,aAAaM,QAAO,SAAAC,GAAI,OAAIA,IAASL,U,EAKrEM,UAAY,WACV,EAAKL,SAAS,CAAEH,aAAc,M,EAGhCS,YAAc,WACZ,IAAQT,EAAiB,EAAKD,MAAtBC,aAER,OAAQA,EAAaU,QACnB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,aAAN,OAAoBV,EAAa,GAAjC,gBAEF,KAAK,EACH,MAAM,aAAN,OAAoBA,EAAaW,KAAK,SAAtC,iBAEF,QACE,MAAM,aAAN,OAAoBX,EAAaY,MAAM,GAAI,GAAGD,KAAK,MAAnD,gBAAgEX,EAAaA,EAAaU,OAAS,GAAnG,mB,4CAIN,WAAU,IAAD,OACCV,EAAiBa,KAAKd,MAAtBC,aAER,OACE,sBAAKc,UAAU,MAAf,UACE,qBAAIA,UAAU,iBAAd,UACE,qBAAKA,UAAU,yBAAf,SACGD,KAAKJ,kBAELT,EAAaU,QAEZ,wBACEK,KAAK,SACLD,UAAU,yBACVE,QAASH,KAAKL,UAHhB,6BASN,oBAAIM,UAAU,aAAd,SACGjB,EAAgBoB,KAAI,SAAAf,GACnB,IAAMgB,EAAalB,EAAamB,SAASjB,GAEzC,OACE,qBAAeY,UAAU,mBAAzB,UACE,wBACEA,UACEM,IACE,qBACA,CAAE,8BAA+BF,IAGrCH,KAAK,SACLC,QAAS,kBAAOE,EACZ,EAAKb,WAAWH,GAChB,EAAKD,QAAQC,IAVnB,SAYGgB,EAAa,SAAW,WAE3B,qBACEJ,UACEM,IACE,mBACA,CAAE,4BAA6BF,IAJrC,SAQGhB,MAvBIA,e,GAlELmB,IAAMC,WAoGTxB,ICtHfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8b2e220e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  addGood = (good: string) => {\n    this.setState(\n      (prevState) => ({ selectedGood: [...prevState.selectedGood, good] }),\n    );\n  };\n\n  removeGood = (good: string) => {\n    this.setState(\n      (prevState) => (\n        { selectedGood: prevState.selectedGood.filter(elem => elem !== good) }\n      ),\n    );\n  };\n\n  clearGood = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  createTitle = () => {\n    const { selectedGood } = this.state;\n\n    switch (selectedGood.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `In bascet ${selectedGood[0]} is selected`;\n\n      case 2:\n        return `In bascet ${selectedGood.join(' and ')} are selected`;\n\n      default:\n        return `In bascet ${selectedGood.slice(0, -1).join(', ')} and ${selectedGood[selectedGood.length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"products-title\">\n          <div className=\"products-title__bascet\">\n            {this.createTitle()}\n          </div>\n          {!!selectedGood.length\n            && (\n              <button\n                type=\"button\"\n                className=\"products-title__button\"\n                onClick={this.clearGood}\n              >\n                Clear basket\n              </button>\n            )}\n        </h1>\n        <ul className=\"goods-list\">\n          {goodsFromServer.map(good => {\n            const isSelected = selectedGood.includes(good);\n\n            return (\n              <li key={good} className=\"goods-list__good\">\n                <button\n                  className={\n                    classNames(\n                      'goods-list__button',\n                      { 'goods-list__button-selected': isSelected },\n                    )\n                  }\n                  type=\"button\"\n                  onClick={() => (isSelected\n                    ? this.removeGood(good)\n                    : this.addGood(good))}\n                >\n                  {isSelected ? 'Remove' : 'Select'}\n                </button>\n                <div\n                  className={\n                    classNames(\n                      'goods-list__good',\n                      { 'goods-list__good-selected': isSelected },\n                    )\n                  }\n                >\n                  {good}\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}